What is the core purpose of the Cyber Sentinel system?
The Cyber Sentinel system is designed as an integrated security monitoring tool specifically tailored for small, local area networks (LANs), such as those found in startups or home environments. Its main goal is to detect traditional cyberattacks like aggressive scans, brute-force attempts, and denial-of-service (DDoS) attacks by monitoring network activity and system logs. By leveraging open-source tools like Wazuh and the ELK Stack (Elasticsearch, Logstash, Kibana) on a cost-effective Raspberry Pi, it provides a budget-friendly solution for identifying security threats and notifying administrators or end-users.
What are the main components of the Cyber Sentinel system?
The Cyber Sentinel system is built upon several key components working together:
Raspberry Pi 5: The primary hardware platform running the system due to its affordability and capability. It typically runs a Linux distribution like Kali Linux or Ubuntu Server.
Wazuh: Serves as the Security Information and Event Management (SIEM) component. It includes a manager installed on the Raspberry Pi and agents installed on the monitored endpoints (Windows/Linux machines). Wazuh agents collect system logs and security events, which are then sent to the manager for analysis against predefined rules.
ELK Stack: Comprises three tools for log processing, storage, and visualization:
Elasticsearch: Stores and indexes the security data received from Wazuh (via Filebeat/Packetbeat).
Logstash: Originally used for direct email alerts via Postfix, its role evolved to process, filter, and format logs (specifically for generating clean HTML email alerts for critical events based on alerts.json) before sending them to Elasticsearch.
Kibana: Provides a web-based dashboard to visualize the security alerts and log data stored in Elasticsearch, allowing users to easily monitor network security status.
Filebeat/Packetbeat: Lightweight data shippers from Elastic that are used to forward log and potentially network packet data from Wazuh to Elasticsearch. Filebeat is specifically configured to send Wazuh alerts.
Wazuh Agents: Software installed on monitored Windows and Linux endpoints that collect logs and system information to send to the Wazuh Manager.
How does the Cyber Sentinel system detect security threats?
The detection process in Cyber Sentinel primarily relies on Wazuh's capabilities. Wazuh agents on monitored machines collect various logs and system events. These logs are sent to the Wazuh Manager, which analyzes them against a set of predefined rules. When a log matches a rule indicating suspicious or malicious activity (e.g., multiple failed login attempts, file integrity changes, specific command executions), Wazuh generates an alert. These alerts are then forwarded to the ELK Stack for storage, visualization (in Kibana), and potentially email notification (via Logstash). The system can detect common attacks like Nmap scans, SSH/RDP brute-force attempts using tools like Hydra, and credential dumping attempts using Metasploit.
How are users notified of critical security alerts?
Initially, the system used Filebeat and Postfix to send email alerts directly from Wazuh. However, this method resulted in unformatted emails. The system was later enhanced by integrating Logstash into the notification pipeline. Now, Logstash reads alerts generated by Wazuh (from the alerts.json file), filters for critical alerts (based on a configured severity level), formats these alerts into a clean HTML format, and sends them via an SMTP service like Gmail to the configured end-user email address. This ensures that administrators or business owners receive clear and user-friendly notifications about significant security incidents.
What were some of the technical challenges encountered during the project?
Several technical challenges were faced during the development of Cyber Sentinel:
Hardware Limitations: The Raspberry Pi 5, despite its capabilities, has limited resources (8GB RAM). Elasticsearch, in particular, was found to consume a significant amount of memory (up to 4GB), occasionally causing the system to become unresponsive. Optimizing Elasticsearch memory usage (setting heap size) was necessary to address this.
Software Version Conflicts: Ensuring compatibility between specific versions of Wazuh and the ELK Stack components (Elasticsearch, Logstash, Kibana, Filebeat) was crucial due to potential version conflicts.
Configuration Issues: Setting up the various components and their interconnections required meticulous configuration. For example, correctly configuring Filebeat to forward Wazuh alerts, setting up email alerts with Postfix/Logstash, and managing agent registration keys were detailed processes.
Linux Environment Specifics: Working with Linux (Kali Linux/Ubuntu Server) on the Raspberry Pi involved troubleshooting command-line issues, managing package installations (e.g., using snapd for Sublime Text when apt-get failed), and correctly configuring environment variables and file permissions.
Detection Limitations: Wazuh's primary detection method is based on analyzing OS logs. This proved less effective in detecting certain types of attacks, particularly web-based attacks and some advanced Metasploit payloads (like Meterpreter), especially on older operating systems like Metasploitable 3 which lack advanced logging capabilities. This highlighted a limitation of a purely log-based detection approach.
What machine learning models are considered for future integration and why?
The project explores integrating three machine learning models to enhance threat detection, specifically tailored for the Raspberry Pi's resource constraints and the data types handled:
LogBERT: Considered for its strength in log anomaly detection, particularly for analyzing the textual content of Wazuh alerts (alerts.json) to identify subtle patterns indicative of intrusion attempts or misconfigurations that rule-based systems might miss.
TinyBERT: A lightweight BERT model optimized for Natural Language Processing (NLP) tasks in resource-constrained environments. It can process unstructured text in logs to classify events (normal, suspicious, critical) or extract features, aiding in prioritizing alerts while minimizing resource usage on the Raspberry Pi.
TabNet: Designed for structured tabular data, ideal for analyzing network packet information (source/destination IPs, ports, protocols, etc.) from tools like Packetbeat to detect anomalies like unusual traffic patterns characteristic of DDoS attacks. These models are intended to complement existing rule-based detection and potentially be deployed locally on the Raspberry Pi as lightweight Python scripts or APIs.
What is the target audience for the Cyber Sentinel system?
The Cyber Sentinel system is primarily aimed at small businesses, startups, and home networks. The project's design choices, such as using a cost-effective Raspberry Pi and open-source software, make it a suitable security monitoring solution for organizations or individuals with limited budgets and IT resources. The system is intended to be managed by either an administrator (IT staff, consultant) or potentially the business owner themselves. The administrator is responsible for the initial setup using the provided installer, while the end-users (like a business owner or CEO) primarily interact with the system by receiving email alerts and viewing the Kibana dashboard to stay informed about security incidents.
How is the system deployed and managed?
The Cyber Sentinel system is designed to be deployed on a Raspberry Pi 5 running a compatible Linux OS (like Kali Linux or Ubuntu Server). Deployment involves running an executable installer script, which automates the installation of Wazuh Manager, the ELK Stack (Elasticsearch, Logstash, Kibana), and necessary dependencies while managing version control and configuration files. After installation, the system requires a static IP address on the local network to ensure stable communication with monitored agents and allow access to the Kibana web dashboard (typically accessed via the Raspberry Pi's IP address on port 5601). Agent management, including adding new agents and obtaining registration keys, is performed via the Wazuh Manager on the Raspberry Pi, with the agent software installed on the target machines (Windows/Linux endpoints). A graphical user interface (GUI) is also planned to simplify the monitoring and management of agents, services, and logs locally on the Wazuh Manager.